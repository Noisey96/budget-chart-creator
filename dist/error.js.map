{"version":3,"file":"error.js","mappings":"CAQC,WACG,aAOA,SAASA,EAAaC,GAClBC,QAAQC,IAAIF,EAAIG,SAChB,IAAIC,EAAQC,KAAKC,MAAMN,EAAIG,SAEvBI,EAAgBC,SAASC,eAAe,aACxCC,EAAgBF,SAASC,eAAe,aAC5CF,EAAcI,YAAcP,EAAMQ,KAClCF,EAAcC,YAAcN,KAAKQ,UAAUT,EAAMU,WAIrD,SAASC,EAAWC,GACZA,EAAYC,SAAWC,OAAOC,kBAAkBC,UAAWF,OAAOG,QAAQC,GAAGC,cAAc,aAC1FL,OAAOG,QAAQC,GAAGC,cAAc,UAnBzCL,OAAOM,UACNC,MAAK,WACFP,OAAOG,QAAQC,GAAGI,gBAAgBR,OAAOS,UAAUC,4BAA6B7B,EAAcgB,MAJrG","sources":["webpack:///./src/dialogs/error.js?"],"sourcesContent":["/*\r\n    Name: John Freeman\r\n    Date: 6/20/22\r\n    File: error.js\r\n    File History: Created on 6/19/22. Edited on 6/20/22 to display more error information.\r\n*/\r\n\r\n// when ready, function messages the taskpane to send the error, and it receives and displays that error\r\n(function() {\r\n    \"use strict\";\r\n    Office.onReady()\r\n    .then(function() {\r\n        Office.context.ui.addHandlerAsync(Office.EventType.DialogParentMessageReceived, displayError, registered);\r\n    });\r\n\r\n    // function displays the error\r\n    function displayError(arg) {\r\n        console.log(arg.message);\r\n        let error = JSON.parse(arg.message);\r\n\r\n        let errorNameElem = document.getElementById(\"errorName\");\r\n        let errorInfoElem = document.getElementById(\"errorInfo\");\r\n        errorNameElem.textContent = error.code;\r\n        errorInfoElem.textContent = JSON.stringify(error.debugInfo);\r\n    }\r\n\r\n    // function sends a message to the taskpane when ready\r\n    function registered(asyncResult) {\r\n        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) Office.context.ui.messageParent(\"connected\");\r\n        else Office.context.ui.messageParent(\"failed\");\r\n    }\r\n}());"],"names":["displayError","arg","console","log","message","error","JSON","parse","errorNameElem","document","getElementById","errorInfoElem","textContent","code","stringify","debugInfo","registered","asyncResult","status","Office","AsyncResultStatus","Succeeded","context","ui","messageParent","onReady","then","addHandlerAsync","EventType","DialogParentMessageReceived"],"sourceRoot":""}